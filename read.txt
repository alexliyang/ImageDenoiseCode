1，AutoEncoder为采用mnist数据库的基于AutoEncoder的去噪程序
----------------------------------------------------------------------------------------------------------------------------
2，CNN_imageNoise.ipynb为采用如下结构：
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
input_1 (InputLayer)         (None, 28, 28, 1)         0         
_________________________________________________________________
conv2d_1 (Conv2D)            (None, 28, 28, 32)        320       
_________________________________________________________________
max_pooling2d_1 (MaxPooling2 (None, 14, 14, 32)        0         
_________________________________________________________________
conv2d_2 (Conv2D)            (None, 14, 14, 32)        9248      
_________________________________________________________________
conv2d_3 (Conv2D)            (None, 14, 14, 32)        9248      
_________________________________________________________________
max_pooling2d_2 (MaxPooling2 (None, 7, 7, 32)          0         
_________________________________________________________________
conv2d_4 (Conv2D)            (None, 7, 7, 32)          9248      
_________________________________________________________________
up_sampling2d_1 (UpSampling2 (None, 14, 14, 32)        0         
_________________________________________________________________
conv2d_5 (Conv2D)            (None, 14, 14, 32)        9248      
_________________________________________________________________
up_sampling2d_2 (UpSampling2 (None, 28, 28, 32)        0         
_________________________________________________________________
conv2d_6 (Conv2D)            (None, 28, 28, 1)         289       
=================================================================
Total params: 37,601
Trainable params: 37,601
Non-trainable params: 0
_________________________________________________________________
其中psnr为：psnr is : 16.3405184164的去噪程序
----------------------------------------------------------------------------------------------------------------------------
3，LinearRegression.py为线性回归代码
其中X_train,Y_train为前160个，X_test,Y_test为后40个.
模型结构为：
一层网络，其中输入模型维数为1
编译参数为：
编译loss为mse,优化函数为sgd
并且为其绘制了结果
----------------------------------------------------------------------------------------------------------------------------
4，TestDenoise_CNN.ipynb为采用tensorflow为后端一个去噪代码
数据集为：mnist
结构框架为：
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
input_1 (InputLayer)         (None, 28, 28, 1)         0         
_________________________________________________________________
conv2d_1 (Conv2D)            (None, 28, 28, 8)         80        
_________________________________________________________________
conv2d_2 (Conv2D)            (None, 28, 28, 8)         584       
_________________________________________________________________
conv2d_3 (Conv2D)            (None, 28, 28, 1)         73        
=================================================================
Total params: 737
Trainable params: 737
Non-trainable params: 0
_________________________________________________________________
psnr是：31.4132906813
----------------------------------------------------------------------------------------------------------------------------
5，TestDenoise_CNN_by_AutoEncode.ipynb
数据集为：mnist
结构框架为：
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
input_1 (InputLayer)         (None, 28, 28, 1)         0         
_________________________________________________________________
conv2d_1 (Conv2D)            (None, 28, 28, 128)       1280      
_________________________________________________________________
conv2d_2 (Conv2D)            (None, 28, 28, 128)       147584    
_________________________________________________________________
conv2d_3 (Conv2D)            (None, 28, 28, 128)       147584    
_________________________________________________________________
max_pooling2d_1 (MaxPooling2 (None, 14, 14, 128)       0         
_________________________________________________________________
conv2d_4 (Conv2D)            (None, 14, 14, 128)       147584    
_________________________________________________________________
conv2d_5 (Conv2D)            (None, 14, 14, 128)       147584    
_________________________________________________________________
conv2d_6 (Conv2D)            (None, 14, 14, 128)       147584    
_________________________________________________________________
max_pooling2d_2 (MaxPooling2 (None, 7, 7, 128)         0         
_________________________________________________________________
conv2d_7 (Conv2D)            (None, 7, 7, 128)         147584    
_________________________________________________________________
conv2d_8 (Conv2D)            (None, 7, 7, 128)         147584    
_________________________________________________________________
conv2d_9 (Conv2D)            (None, 7, 7, 128)         147584    
_________________________________________________________________
up_sampling2d_1 (UpSampling2 (None, 14, 14, 128)       0         
_________________________________________________________________
conv2d_10 (Conv2D)           (None, 14, 14, 128)       147584    
_________________________________________________________________
conv2d_11 (Conv2D)           (None, 14, 14, 128)       147584    
_________________________________________________________________
conv2d_12 (Conv2D)           (None, 14, 14, 128)       147584    
_________________________________________________________________
up_sampling2d_2 (UpSampling2 (None, 28, 28, 128)       0         
_________________________________________________________________
conv2d_13 (Conv2D)           (None, 28, 28, 1)         1153      
=================================================================
Total params: 1,625,857
Trainable params: 1,625,857
Non-trainable params: 0
psnr是：31.0660521481
----------------------------------------------------------------------------------------------------------------------------
6，ganzhiji.py
本代码主要是手写单层神经网络
----------------------------------------------------------------------------------------------------------------------------


